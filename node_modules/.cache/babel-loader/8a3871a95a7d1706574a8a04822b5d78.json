{"ast":null,"code":"var _jsxFileName = \"/home/ascratech/projects/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeContext, themes } from './theme-context';\nimport ThemeTogglerButton from './theme-toggler-button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: state.theme === themes.dark ? themes.light : themes.dark\n      }));\n    }; // State also contains the updater function so it will\n    // be passed down into the context provider\n\n\n    this.state = {\n      theme: themes.light,\n      toggleTheme: this.toggleTheme\n    };\n  }\n\n  render() {\n    // The entire state is passed to the provider\n    console.log(this.state);\n    return React.createElement(ThemeContext, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Content() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ThemeTogglerButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/ascratech/projects/my-app/src/index.js"],"names":["React","ReactDOM","serviceWorker","ThemeContext","themes","ThemeTogglerButton","App","Component","constructor","props","toggleTheme","setState","state","theme","dark","light","render","console","log","Content","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAAQC,YAAR,EAAsBC,MAAtB,QAAmC,iBAAnC;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AAEA,SAAKC,WAAL,GAAmB,MAAM;AACvB,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBC,QAAAA,KAAK,EACHD,KAAK,CAACC,KAAN,KAAgBT,MAAM,CAACU,IAAvB,GACIV,MAAM,CAACW,KADX,GAEIX,MAAM,CAACU;AAJS,OAAL,CAAnB;AAMD,KAPD,CAHiB,CAYjB;AACA;;;AACA,SAAKF,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAET,MAAM,CAACW,KADH;AAEXL,MAAAA,WAAW,EAAE,KAAKA;AAFP,KAAb;AAID;;AAEDM,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,WACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,KAAKA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA7B+B;;AAgClC,SAASO,OAAT,GAAmB;AACjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAEDlB,QAAQ,CAACe,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {ThemeContext, themes} from './theme-context';\nimport ThemeTogglerButton from './theme-toggler-button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme:\n          state.theme === themes.dark\n            ? themes.light\n            : themes.dark,\n      }));\n    };\n\n    // State also contains the updater function so it will\n    // be passed down into the context provider\n    this.state = {\n      theme: themes.light,\n      toggleTheme: this.toggleTheme,\n    };\n  }\n\n  render() {\n    // The entire state is passed to the provider\n    console.log(this.state);\n    return (\n      <ThemeContext value={this.state}>\n        <Content />\n      </ThemeContext>\n    );\n  }\n}\n\nfunction Content() {\n  return (\n    <div>\n      <ThemeTogglerButton />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}