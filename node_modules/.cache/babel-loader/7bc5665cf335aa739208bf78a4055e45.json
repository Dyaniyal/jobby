{"ast":null,"code":"var _jsxFileName = \"/home/ascratech/projects/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nclass BlurExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.timeOutId = null;\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onBlurHandler = this.onBlurHandler.bind(this);\n    this.onFocusHandler = this.onFocusHandler.bind(this);\n  }\n\n  onClickHandler() {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  } // We close the popover on the next tick by using setTimeout.\n  // This is necessary because we need to first check if\n  // another child of the element has received focus as\n  // the blur event fires prior to the new focus event.\n\n\n  onBlurHandler() {\n    this.timeOutId = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    });\n  } // If a child receives focus, do not close the popover.\n\n\n  onFocusHandler() {\n    clearTimeout(this.timeOutId);\n  }\n\n  render() {\n    // React assists us by bubbling the blur and\n    // focus events to the parent.\n    return React.createElement(\"div\", {\n      onBlur: this.onBlurHandler,\n      onFocus: this.onFocusHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": this.state.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Select an option\"), this.state.isOpen && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Option 3\")));\n  }\n\n}\n\nReactDOM.render(React.createElement(BlurExample, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/ascratech/projects/my-app/src/index.js"],"names":["React","ReactDOM","serviceWorker","BlurExample","Component","constructor","props","state","isOpen","timeOutId","onClickHandler","bind","onBlurHandler","onFocusHandler","setState","currentState","setTimeout","clearTimeout","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKC,SAAL,GAAiB,IAAjB;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,SAAKI,QAAL,CAAcC,YAAY,KAAK;AAC7BP,MAAAA,MAAM,EAAE,CAACO,YAAY,CAACP;AADO,KAAL,CAA1B;AAGD,GAhBuC,CAkBxC;AACA;AACA;AACA;;;AACAI,EAAAA,aAAa,GAAG;AACd,SAAKH,SAAL,GAAiBO,UAAU,CAAC,MAAM;AAChC,WAAKF,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAJ0B,CAA3B;AAKD,GA5BuC,CA8BxC;;;AACAK,EAAAA,cAAc,GAAG;AACfI,IAAAA,YAAY,CAAC,KAAKR,SAAN,CAAZ;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP;AACA;AACA,WACE;AAAK,MAAA,MAAM,EAAE,KAAKN,aAAlB;AACK,MAAA,OAAO,EAAE,KAAKC,cADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAQ,MAAA,OAAO,EAAE,KAAKH,cAAtB;AACQ,uBAAc,MADtB;AAEQ,uBAAe,KAAKH,KAAL,CAAWC,MAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAQG,KAAKD,KAAL,CAAWC,MAAX,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CATJ,CADF;AAkBD;;AAxDuC;;AA2D1CP,QAAQ,CAACiB,MAAT,CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass BlurExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false };\n    this.timeOutId = null;\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onBlurHandler = this.onBlurHandler.bind(this);\n    this.onFocusHandler = this.onFocusHandler.bind(this);\n  }\n\n  onClickHandler() {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  }\n\n  // We close the popover on the next tick by using setTimeout.\n  // This is necessary because we need to first check if\n  // another child of the element has received focus as\n  // the blur event fires prior to the new focus event.\n  onBlurHandler() {\n    this.timeOutId = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    });\n  }\n\n  // If a child receives focus, do not close the popover.\n  onFocusHandler() {\n    clearTimeout(this.timeOutId);\n  }\n\n  render() {\n    // React assists us by bubbling the blur and\n    // focus events to the parent.\n    return (\n      <div onBlur={this.onBlurHandler}\n           onFocus={this.onFocusHandler}>\n\n        <button onClick={this.onClickHandler}\n                aria-haspopup=\"true\"\n                aria-expanded={this.state.isOpen}>\n          Select an option\n        </button>\n        {this.state.isOpen && (\n          <ul>\n            <li>Option 1</li>\n            <li>Option 2</li>\n            <li>Option 3</li>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <BlurExample />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}